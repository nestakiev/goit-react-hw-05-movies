{"version":3,"file":"static/js/243.08de87b1.chunk.js","mappings":"iMAmBA,UAfiB,WACb,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,MAAqBC,KAAKH,EAC7B,GAAE,KAGC,gCACA,4CACA,SAAC,IAAD,CAAYI,OAAQL,EAAgBM,KAAI,cAG/C,C,6ECdYC,EAAa,SAAC,GAA2B,IAA1BF,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,KAAME,EAAW,EAAXA,MAEtC,OACI,wBACCH,EAAOI,KAAI,SAAAC,GACJ,IAAOC,EAAaD,EAAbC,GAAIC,EAASF,EAATE,MACX,OACIN,GACA,yBAAa,SAAC,KAAD,CAAMO,GAAE,UAAKP,GAAL,OAAYK,GAAMH,MAAOA,EAAjC,SAAyCI,KAA7CD,IAET,yBAAa,SAAC,KAAD,CAAME,GAAE,UAAKF,GAAMH,MAAOA,EAA1B,SAAkCI,KAAtCD,EAEhB,KAGZ,C,2MChBDG,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHZ,EAAkB,mCAAG,sGACPW,IAAAA,IAAA,qCAAwCC,IADjC,cACxBC,EADwB,OAExBhB,EAAiBgB,EAASC,KAAKC,QAAQT,KAAI,SAAAC,GAE7C,MAAO,CACHC,GAFgBD,EAAbC,GAGHC,MAHgBF,EAATE,MAKd,IAR6B,kBASvBZ,GATuB,2CAAH,qDAYlBmB,EAAiB,mCAAG,WAAOR,GAAP,qGACNG,IAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCI,IAD3B,cACvBC,EADuB,SAG8CA,EAASC,KAA7EG,EAHsB,EAGtBA,aAAcR,EAHQ,EAGRA,MAAOS,EAHC,EAGDA,SAAUC,EAHT,EAGSA,OAAQC,EAHjB,EAGiBA,YAAaC,EAH9B,EAG8BA,aAH9B,kBAKtB,CACHJ,aAAAA,EACAR,MAAAA,EACAS,SAAAA,EACAC,OAAAA,EACAC,YAAAA,EACAC,aAAAA,IAXyB,2CAAH,sDAcjBC,EAAiB,mCAAG,WAAOd,GAAP,yFACNG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,EAAzC,oBADM,cACvBC,EADuB,OAGvBU,EAAWV,EAASC,KAAKU,KAAKlB,KAAI,SAAAmB,GAEpC,MAAO,CACHC,KAFwCD,EAArCC,KAGHC,UAHwCF,EAA/BE,UAITC,aAJwCH,EAApBG,aAKpBpB,GALwCiB,EAANjB,GAMzC,IAV4B,kBAYtBe,GAZsB,2CAAH,sDAejBM,EAAgB,mCAAG,WAAOrB,GAAP,yFACLG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,EAAzC,2BADK,cACtBC,EADsB,OAEtBiB,EAAUjB,EAASC,KAAKC,QAAQT,KAAI,SAAAmB,GAEtC,MAAO,CACHjB,GAF2BiB,EAAxBjB,GAGHuB,OAH2BN,EAApBM,OAIPC,QAJ2BP,EAAZO,QAKtB,IAR2B,kBAUrBF,GAVqB,2CAAH,sDAahBG,EAAiB,mCAAG,WAAOC,GAAP,yFACNvB,IAAAA,IAAA,gCAAmCC,EAAnC,wCAA0EsB,IADpE,UACvBrB,EADuB,OASJ,KAPnBsB,EAAYtB,EAASC,KAAKC,QAAQT,KAAI,SAAAmB,GAExC,MAAO,CACHjB,GAFgBiB,EAAbjB,GAGHC,MAHgBgB,EAAThB,MAId,KAEa2B,OATe,uBAUzBC,MAAM,yDAVmB,kBAWlB,IAXkB,gCAatBF,GAbsB,2CAAH,qD","sources":["Views/HomeView.jsx","components/MoviesList/MoviesList.jsx","services/moviesAPI.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { loadTrendingMovies } from \"services/moviesAPI\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\n\nconst HomeView = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    \n    useEffect(() => {\n        loadTrendingMovies().then(setTrendingMovies);\n    }, []);\n\n    return (\n        <section>\n        <h2>Trending today</h2>\n        <MoviesList movies={trendingMovies} link={`movies/`}/>\n        </section>\n    )\n};\n\nexport default HomeView;","import { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types'; \n\nexport const MoviesList = ({movies, link, state}) => {\n\n    return (\n        <ul>\n        {movies.map(movie => {\n                const {id, title} = movie;\n                return (\n                    link ? \n                    <li key={id}><Link to={`${link}${id}`} state={state}>{title}</Link></li>\n                    :\n                    <li key={id}><Link to={`${id}`} state={state}>{title}</Link></li>\n                )\n            })}\n        </ul>\n    )\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.array.isRequired,\n    link: PropTypes.string,\n    state: PropTypes.object,\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"70cb528e64bd13ac19df414fea399cc5\";\n\nexport const loadTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const trendingMovies = response.data.results.map(movie => {\n        const {id, title} = movie;\n        return {\n            id,\n            title\n        }\n    })\n    return trendingMovies;\n};\n\nexport const loadFullInfoMovie = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = response.data;\n\n    return {\n        vote_average,\n        title,\n        overview,\n        genres, \n        poster_path,\n        release_date}\n};\n\nexport const loadCastInfoMovie = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\n    const castInfo = response.data.cast.map(a => {\n        const {name, character, profile_path, id} = a;\n        return {\n            name,\n            character,\n            profile_path,\n            id}\n    });\n\n    return castInfo;\n};\n\nexport const loadReviewsMovie = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data.results.map(a => {\n        const {id, author, content } = a;\n        return {\n            id,\n            author,\n            content}\n    });  \n    \n    return reviews;\n}\n\nexport const loadMovieOnSearch = async (searchQuery) => {\n    const response = await axios.get(`search/movie/?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`);\n    const movieList = response.data.results.map(a => {\n        const {id, title} = a;\n        return {\n            id,\n            title}\n    })\n\n    if (movieList.length === 0) {\n        alert(\"We can't found anythings, please repeate your request\")\n        return [];\n    }\n    return movieList;\n}\n"],"names":["useState","trendingMovies","setTrendingMovies","useEffect","loadTrendingMovies","then","movies","link","MoviesList","state","map","movie","id","title","to","axios","API_KEY","response","data","results","loadFullInfoMovie","vote_average","overview","genres","poster_path","release_date","loadCastInfoMovie","castInfo","cast","a","name","character","profile_path","loadReviewsMovie","reviews","author","content","loadMovieOnSearch","searchQuery","movieList","length","alert"],"sourceRoot":""}