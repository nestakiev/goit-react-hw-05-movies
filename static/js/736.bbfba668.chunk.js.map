{"version":3,"file":"static/js/736.bbfba668.chunk.js","mappings":"qPAEaA,EAAOC,EAAAA,GAAAA,GAAH,8FAMJC,EAAWD,EAAAA,GAAAA,GAAH,4G,SC0BrB,EA3Ba,WACT,IAAOE,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBN,GAASO,KAAKH,EACnC,GAAE,CAACJ,IAEoB,IAApBG,EAASK,OACF,MAIP,SAACX,EAAD,UACKM,EAASM,KAAI,SAAAC,GACV,IAAOC,EAAqCD,EAArCC,KAAMC,EAA+BF,EAA/BE,UAAWC,EAAoBH,EAApBG,aAAcC,EAAMJ,EAANI,GAEtC,OAAO,UAACf,EAAD,YACH,gBAAKgB,IApBF,mCAoBwBF,EAAcG,IAAKL,KAC9C,uBAAIA,KACJ,uCAAeC,OAHGE,EAKzB,KAGZ,C,2MC9BDG,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEHC,EAAkB,mCAAG,sGACPF,IAAAA,IAAA,qCAAwCC,IADjC,cACxBE,EADwB,OAExBC,EAAiBD,EAASE,KAAKC,QAAQd,KAAI,SAAAe,GAE7C,MAAO,CACHV,GAFgBU,EAAbV,GAGHW,MAHgBD,EAATC,MAKd,IAR6B,kBASvBJ,GATuB,2CAAH,qDAYlBK,EAAiB,mCAAG,WAAOZ,GAAP,qGACNG,IAAAA,IAAA,gBAAmBH,EAAnB,oBAAiCI,IAD3B,cACvBE,EADuB,SAG8CA,EAASE,KAA7EK,EAHsB,EAGtBA,aAAcF,EAHQ,EAGRA,MAAOG,EAHC,EAGDA,SAAUC,EAHT,EAGSA,OAAQC,EAHjB,EAGiBA,YAAaC,EAH9B,EAG8BA,aAH9B,kBAKtB,CACHJ,aAAAA,EACAF,MAAAA,EACAG,SAAAA,EACAC,OAAAA,EACAC,YAAAA,EACAC,aAAAA,IAXyB,2CAAH,sDAcjBzB,EAAiB,mCAAG,WAAOQ,GAAP,yFACNG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,EAAzC,oBADM,cACvBE,EADuB,OAGvBjB,EAAWiB,EAASE,KAAKU,KAAKvB,KAAI,SAAAwB,GAEpC,MAAO,CACHtB,KAFwCsB,EAArCtB,KAGHC,UAHwCqB,EAA/BrB,UAITC,aAJwCoB,EAApBpB,aAKpBC,GALwCmB,EAANnB,GAMzC,IAV4B,kBAYtBX,GAZsB,2CAAH,sDAejB+B,EAAgB,mCAAG,WAAOpB,GAAP,yFACLG,IAAAA,IAAA,gBAAmBH,EAAnB,4BAAyCI,EAAzC,2BADK,cACtBE,EADsB,OAEtBe,EAAUf,EAASE,KAAKC,QAAQd,KAAI,SAAAwB,GAEtC,MAAO,CACHnB,GAF2BmB,EAAxBnB,GAGHsB,OAH2BH,EAApBG,OAIPC,QAJ2BJ,EAAZI,QAKtB,IAR2B,kBAUrBF,GAVqB,2CAAH,sDA8BhBG,EAAoB,SAACC,GAC9B,OAAOC,MAAM,sDAAD,OAAuDtB,EAAvD,wCAA8FqB,IACzGhC,MAAK,SAAAa,GAAQ,OAAIA,EAASqB,MAAb,IACblC,MAAK,SAAAe,GACF,IAAMoB,EAAYpB,EAAKC,QAAQd,KAAI,SAAAwB,GAE/B,MAAO,CACHnB,GAFgBmB,EAAbnB,GAGHW,MAHgBQ,EAATR,MAId,IAED,OAAyB,IAArBiB,EAAUlC,QACVmC,MAAM,yDACC,IAGJD,CACV,GACJ,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const List = styled.ul`\n    list-style-type: none;\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nexport const ListItem = styled.li`\n  margin: 10px;\n  border: 1px gray solid;\n  padding: 5px;\n  text-align: center;\n`;\n","import { useEffect,  useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { loadCastInfoMovie } from \"services/moviesAPI\";\nimport {List, ListItem} from './Cast.styled';\n\nconst BASE_PHOTO_URL = \"https://image.tmdb.org/t/p/w200/\";\n\nconst Cast = () => {\n    const {movieId} = useParams();\n    const [castInfo, setCastInfo] = useState([]);\n\n    useEffect(() => {\n        loadCastInfoMovie(movieId).then(setCastInfo);\n    }, [movieId]);\n\n    if (castInfo.length === 0) {\n        return null;\n    }\n\n    return (\n        <List>\n            {castInfo.map(actor => {\n                const {name, character, profile_path, id} = actor;\n\n                return <ListItem key={id}>\n                    <img src={BASE_PHOTO_URL + profile_path} alt={name}/>\n                    <p>{name}</p>\n                    <p>Character: {character}</p>\n                </ListItem>\n            })}\n        </List>\n    )\n};\n\nexport default Cast;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"70cb528e64bd13ac19df414fea399cc5\";\n\nexport const loadTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const trendingMovies = response.data.results.map(movie => {\n        const {id, title} = movie;\n        return {\n            id,\n            title\n        }\n    })\n    return trendingMovies;\n};\n\nexport const loadFullInfoMovie = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = response.data;\n\n    return {\n        vote_average,\n        title,\n        overview,\n        genres, \n        poster_path,\n        release_date}\n};\n\nexport const loadCastInfoMovie = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\n    const castInfo = response.data.cast.map(a => {\n        const {name, character, profile_path, id} = a;\n        return {\n            name,\n            character,\n            profile_path,\n            id}\n    });\n\n    return castInfo;\n};\n\nexport const loadReviewsMovie = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data.results.map(a => {\n        const {id, author, content } = a;\n        return {\n            id,\n            author,\n            content}\n    });  \n    \n    return reviews;\n}\n\n// export const loadMovieOnSearch = async (searchQuery) => {\n//     const response = await axios.get(`search/movie/?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`);\n//     const movieList = response.data.results.map(a => {\n//         const {id, title} = a;\n//         return {\n//             id,\n//             title}\n//     })\n\n//     if (movieList.length === 0) {\n//         alert(\"We can't found anythings, please repeate your request\")\n//         return [];\n//     }\n//     return movieList;\n// }\n\n\nexport const loadMovieOnSearch = (searchQuery) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie/?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`)\n    .then(response => response.json())\n    .then(data => {\n        const movieList = data.results.map(a => {\n            const {id, title} = a;\n            return {\n                id,\n                title}\n        })\n    \n        if (movieList.length === 0) {\n            alert(\"We can't found anythings, please repeate your request\")\n            return [];\n        }\n\n        return movieList;\n    });\n};\n"],"names":["List","styled","ListItem","movieId","useParams","useState","castInfo","setCastInfo","useEffect","loadCastInfoMovie","then","length","map","actor","name","character","profile_path","id","src","alt","axios","API_KEY","loadTrendingMovies","response","trendingMovies","data","results","movie","title","loadFullInfoMovie","vote_average","overview","genres","poster_path","release_date","cast","a","loadReviewsMovie","reviews","author","content","loadMovieOnSearch","searchQuery","fetch","json","movieList","alert"],"sourceRoot":""}