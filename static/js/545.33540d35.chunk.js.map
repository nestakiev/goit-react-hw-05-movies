{"version":3,"file":"static/js/545.33540d35.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","Views/MoviesView.jsx","components/MoviesList/MoviesList.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n  padding: 20px;\n`;\n\nexport const SearchInput = styled.input`\n  width: 250px;\n  margin-right: 20px;\n`;\n","import { SearchForm, SearchInput } from \"./SearchBar.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const SearchBar = ({onSubmit}) => {\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const searchQuery = e.target.elements.search.value.trim();\n\n        if(searchQuery.length === 0) {\n            return alert(\"Please, enter your request\")\n        }\n        \n        onSubmit(searchQuery);\n\n        e.currentTarget.reset();\n    }\n\n    return (\n        <SearchForm onSubmit={e => handleSubmit(e)}>\n            <SearchInput type=\"text\" name=\"search\" />\n            <button type=\"submit\">Search</button>\n        </SearchForm>\n    )\n};\n\nSearchBar.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}","import { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { useEffect, useState } from \"react\";\nimport { loadMovieOnSearch } from \"services/moviesAPI\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { useLocation, useSearchParams } from \"react-router-dom\";\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const location = useLocation();\n\n    useEffect(() => {\n    if(searchParams.get('search')) {\n        loadMovieOnSearch(searchParams.get('search')).then(setMovies);}\n    }, [searchParams])\n\n    const submitSearch = (search) => {\n        setSearchParams(search !== \"\" ? {search} : {})\n    };\n\n    return (\n        <main>\n            <SearchBar onSubmit={submitSearch}/>\n            {movies && <MoviesList movies={movies} state={{from: location}}/>}\n        </main>\n    )\n};\n\nexport default Movies;","import { Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types'; \n\nexport const MoviesList = ({movies, link, state}) => {\n\n    return (\n        <ul>\n        {movies.map(movie => {\n                const {id, title} = movie;\n                return (\n                    link ? \n                    <li key={id}><Link to={`${link}${id}`} state={state}>{title}</Link></li>\n                    :\n                    <li key={id}><Link to={`${id}`} state={state}>{title}</Link></li>\n                )\n            })}\n        </ul>\n    )\n};\n\nMoviesList.propTypes = {\n    movies: PropTypes.array.isRequired,\n    link: PropTypes.string,\n    state: PropTypes.object,\n}","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"70cb528e64bd13ac19df414fea399cc5\";\n\nexport const loadTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const trendingMovies = response.data.results.map(movie => {\n        const {id, title} = movie;\n        return {\n            id,\n            title\n        }\n    })\n    return trendingMovies;\n};\n\nexport const loadFullInfoMovie = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = response.data;\n\n    return {\n        vote_average,\n        title,\n        overview,\n        genres, \n        poster_path,\n        release_date}\n};\n\nexport const loadCastInfoMovie = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\n    const castInfo = response.data.cast.map(a => {\n        const {name, character, profile_path, id} = a;\n        return {\n            name,\n            character,\n            profile_path,\n            id}\n    });\n\n    return castInfo;\n};\n\nexport const loadReviewsMovie = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data.results.map(a => {\n        const {id, author, content } = a;\n        return {\n            id,\n            author,\n            content}\n    });  \n    \n    return reviews;\n}\n\nexport const loadMovieOnSearch = async (searchQuery) => {\n    const response = await axios.get(`search/movie/?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`);\n    const movieList = response.data.results.map(a => {\n        const {id, title} = a;\n        return {\n            id,\n            title}\n    })\n\n    if (movieList.length === 0) {\n        alert(\"We can't found anythings, please repeate your request\")\n        return [];\n    }\n    return movieList;\n}\n"],"names":["SearchForm","styled","SearchInput","SearchBar","onSubmit","handleSubmit","e","preventDefault","searchQuery","target","elements","search","value","trim","length","alert","currentTarget","reset","type","name","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","loadMovieOnSearch","then","MoviesList","state","from","link","map","movie","id","title","to","axios","API_KEY","loadTrendingMovies","response","trendingMovies","data","results","loadFullInfoMovie","vote_average","overview","genres","poster_path","release_date","loadCastInfoMovie","castInfo","cast","a","character","profile_path","loadReviewsMovie","reviews","author","content","movieList"],"sourceRoot":""}