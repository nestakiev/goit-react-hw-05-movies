{"version":3,"file":"static/js/333.cace7e8c.chunk.js","mappings":"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","sources":["Views/MovieDetailsView.styled.jsx","Views/MovieDetailsView.jsx","services/moviesAPI.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { HiArrowNarrowLeft } from \"react-icons/hi\";\n\n\nexport const MovieInfoContainer = styled.section`\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    border-bottom: 1px grey solid;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 30px;\n`;\n\nexport const ButtonLink = styled(Link)`\n  padding: 5px 10px;\n  background-color: lightgray;\n  border-radius: 5px;\n  text-decoration: none;\n  display: inline-block;\n  margin-bottom: 10px;\n    &:hover {\n      color: blue;\n      background-color: red;\n    }\n\n`;\n\nexport const IconArrowBack = styled(HiArrowNarrowLeft)`\n\n  \n`;","import { useEffect, useState, Suspense } from \"react\";\nimport { Outlet, useParams, Link, useLocation } from \"react-router-dom\";\nimport { loadFullInfoMovie } from \"services/moviesAPI\";\nimport { MovieInfoContainer, InfoContainer, ButtonLink, IconArrowBack } from './MovieDetailsView.styled';\nimport { ThreeDots } from \"react-loader-spinner\";\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w300';\n\n\nconst MovieDetailsView = () => {\n\n    const { movieId } = useParams();\n    const location = useLocation();\n    const [movieInfo, setMovieInfo] = useState({});\n\n    useEffect (() => {\n        loadFullInfoMovie(movieId).then(setMovieInfo);\n    }, [movieId]);\n\n    if (Object.keys(movieInfo).length === 0) {\n        return null;\n    }\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = movieInfo;\n    const posterLink = BASE_POSTER_URL + poster_path;\n    const userScore = parseInt(vote_average * 10);\n    const genresInfo = genres.map(a => a.name).join(\" \");\n    const releaseYear = release_date.split('-')[0];\n    const backLink = location.state?.from ?? '/';\n\n    return (\n        <div>\n        <MovieInfoContainer>\n            <div>\n            <ButtonLink to={backLink}> <IconArrowBack/>Go Back</ButtonLink>\n            <img src={posterLink} alt={`${title} poster`}/>\n            </div>\n            <InfoContainer>\n                <h2>{title} ({releaseYear})</h2>\n                <p>User Score: {userScore}%</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genresInfo}</p>\n            </InfoContainer>\n        </MovieInfoContainer>\n        <section>\n        <p>Additional information</p>\n        <ul>\n            <li>\n            <Link to='cast'>Cast</Link>\n            </li>\n            <li>\n            <Link to='reviews'>Reviews</Link>\n            </li>\n        </ul>\n        </section>\n            <Suspense fallback={<ThreeDots \n                                height=\"80\" \n                                width=\"80\" \n                                radius=\"9\"\n                                color=\"#4fa94d\" \n                                ariaLabel=\"three-dots-loading\"\n                                wrapperStyle={{}}\n                                wrapperClassName=\"\"\n                                visible={true}\n            />}>\n            <Outlet/>\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetailsView;","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"70cb528e64bd13ac19df414fea399cc5\";\n\nexport const loadTrendingMovies = async () => {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    const trendingMovies = response.data.results.map(movie => {\n        const {id, title} = movie;\n        return {\n            id,\n            title\n        }\n    })\n    return trendingMovies;\n};\n\nexport const loadFullInfoMovie = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n\n    const {vote_average, title, overview, genres, poster_path, release_date} = response.data;\n\n    return {\n        vote_average,\n        title,\n        overview,\n        genres, \n        poster_path,\n        release_date}\n};\n\nexport const loadCastInfoMovie = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n\n    const castInfo = response.data.cast.map(a => {\n        const {name, character, profile_path, id} = a;\n        return {\n            name,\n            character,\n            profile_path,\n            id}\n    });\n\n    return castInfo;\n};\n\nexport const loadReviewsMovie = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n    const reviews = response.data.results.map(a => {\n        const {id, author, content } = a;\n        return {\n            id,\n            author,\n            content}\n    });  \n    \n    return reviews;\n}\n\n// export const loadMovieOnSearch = async (searchQuery) => {\n//     const response = await axios.get(`search/movie/?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`);\n//     const movieList = response.data.results.map(a => {\n//         const {id, title} = a;\n//         return {\n//             id,\n//             title}\n//     })\n\n//     if (movieList.length === 0) {\n//         alert(\"We can't found anythings, please repeate your request\")\n//         return [];\n//     }\n//     return movieList;\n// }\n\n\nexport const loadMovieOnSearch = (searchQuery) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie/?api_key=${API_KEY}&language=en-US&page=1&query=${searchQuery}`)\n    .then(response => response.json())\n    .then(data => {\n        const movieList = data.results.map(a => {\n            const {id, title} = a;\n            return {\n                id,\n                title}\n        })\n    \n        if (movieList.length === 0) {\n            alert(\"We can't found anythings, please repeate your request\")\n            return [];\n        }\n\n        return movieList;\n    });\n};\n"],"names":["MovieInfoContainer","styled","InfoContainer","ButtonLink","Link","IconArrowBack","HiArrowNarrowLeft","movieId","useParams","location","useLocation","useState","movieInfo","setMovieInfo","useEffect","loadFullInfoMovie","then","Object","keys","length","vote_average","title","overview","genres","poster_path","release_date","posterLink","userScore","parseInt","genresInfo","map","a","name","join","releaseYear","split","backLink","state","from","to","src","alt","Suspense","fallback","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","axios","API_KEY","loadTrendingMovies","response","trendingMovies","data","results","movie","id","loadCastInfoMovie","castInfo","cast","character","profile_path","loadReviewsMovie","reviews","author","content","loadMovieOnSearch","searchQuery","fetch","json","movieList","alert"],"sourceRoot":""}